name: Publish and Release

on:
  push:
    tags:
      - "^v(?P<major>0|[1-9]\\d*)\\.(?P<minor>0|[1-9]\\d*)\\.(?P<patch>0|[1-9]\\d*)(?:-(?P<prerelease>(?:0|[1-9]\\d*|\\d*[a-zA-Z-][0-9a-zA-Z-]*)(?:\\.(?:0|[1-9]\\d*|\\d*[a-zA-Z-][0-9a-zA-Z-]*))*))?(?:\\+(?P<buildmetadata>[0-9a-zA-Z-]+(?:\\.[0-9a-zA-Z-]+)*))?$" # Trigger on version tags that adhere to a valid semantic versioning pattern (https://semver.org/)

permissions:
  contents: write

jobs:
  publish:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: "3.11"

      - name: Install Poetry
        run: |
          python -m pip install "poetry==2.0.1"

      - name: Configure Poetry
        env:
          PYPI_TOKEN: ${{ secrets.PYPI_API_TOKEN }}
        run: |
          poetry config pypi-token.pypi $PYPI_TOKEN

      - name: Install dependencies
        run: poetry install

      - name: Build and publish
        run: echo "Valid tag" # poetry publish --build

  release:
    needs: publish # This ensures release only runs after successful publish
    runs-on: ubuntu-latest
    steps:
      - name: Create GitHub Release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          tag: ${{ github.ref_name }}
        run: echo "Valid release"
        # run: |
        #    gh release create "$tag" \
        #        --repo="$GITHUB_REPOSITORY" \
        #        --title="${tag#v}" \
        #        --generate-notes
